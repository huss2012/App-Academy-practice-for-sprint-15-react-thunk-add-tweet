{"ast":null,"code":"var _jsxFileName = \"/home/hussaindominant/App-Acadmy-Projects/practice-for-sprint-15-react-thunk-add-tweet/frontend/src/TweetList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllTweets } from './store/tweet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TweetList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const tweetList = useSelector(state => Object.values(state.tweet));\n  console.log(tweetList);\n  useEffect(() => {\n    dispatch(getAllTweets());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tweet List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), tweetList === null || tweetList === void 0 ? void 0 : tweetList.map(_ref => {\n      let {\n        id,\n        message\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(TweetList, \"d6SJOTDyfDE7gitDHBhbZdvl59o=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TweetList;\nexport default TweetList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetList\");","map":{"version":3,"sources":["/home/hussaindominant/App-Acadmy-Projects/practice-for-sprint-15-react-thunk-add-tweet/frontend/src/TweetList.js"],"names":["useEffect","useDispatch","useSelector","getAllTweets","TweetList","dispatch","tweetList","state","Object","values","tweet","console","log","map","id","message"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,eAA7B;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,SAAS,GAAGJ,WAAW,CAAEK,KAAD,IAAWC,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACG,KAApB,CAAZ,CAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,QAAQ,CAACF,YAAY,EAAb,CAAR;AACD,GAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,SAFH,aAEGA,SAFH,uBAEGA,SAAS,CAAEO,GAAX,CAAe;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA;AAAN,OAAD;AAAA,0BACd;AAAA,kBAAaA;AAAb,SAAQD,EAAR;AAAA;AAAA;AAAA;AAAA,cADc;AAAA,KAAf,CAFH;AAAA,kBADF;AAQD,CAjBD;;GAAMV,S;UACaH,W,EACCC,W;;;KAFdE,S;AAmBN,eAAeA,SAAf","sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllTweets } from './store/tweet';\n\nconst TweetList = () => {\n  const dispatch = useDispatch();\n  const tweetList = useSelector((state) => Object.values(state.tweet));\n  console.log(tweetList);\n\n  useEffect(() => {\n    dispatch(getAllTweets());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Tweet List</h1>\n      {tweetList?.map(({ id, message }) => (\n        <p key={id}>{message}</p>\n      ))}\n    </>\n  );\n};\n\nexport default TweetList;\n"]},"metadata":{},"sourceType":"module"}